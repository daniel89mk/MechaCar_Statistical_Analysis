demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='demo.json')
library(jsonlite)
library(dplyr)
library(tidyr)
library(ggplot2)
# ------------------------------Qualitative Test for Normality------------------------- #
# test the distribution of vehicle weights from the built-in mtcars dataset
# visualize distribution using density plot
ggplot(mtcars,aes(x=wt)) + geom_density()
# The geom_density() function plots a numerical vector by creating buckets of similar values and
# calculating the density (number of bucket data points/total number of data points) for each bucket.
# ------------------------------Quantitative Test for Normality------------------------- #
# The quantitative test for normality uses a statistical test to quantify the probability of
# whether or not the test data came from a normally distributed dataset.
# Data scientists will use the Shapiro-Wilk test for normality
?shapiro.test() # only requires numeric vector of values
shapiro.test(mtcars$wt)
# p-value is greater than 0.05, the data is considered normally distributed.
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
# create a sample dataset using dplyr's sample_n()function
# randomly sample 50 data points
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
#compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
library(jsonlite)
library(dplyr)
library(tidyr)
library(ggplot2)
ggplot(mtcars,aes(x=wt)) + geom_density()
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
setwd("C:/Users/kimbe/R_Analysis/01_Demo")
library(jsonlite)
library(dplyr)
library(tidyr)
library(ggplot2)
# ------------------------------Qualitative Test for Normality------------------------- #
# test the distribution of vehicle weights from the built-in mtcars dataset
# visualize distribution using density plot
ggplot(mtcars,aes(x=wt)) + geom_density()
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
View(population_table)
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
# create a sample dataset using dplyr's sample_n()function
# randomly sample 50 data points
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
#compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
setwd("C:/Users/kimbe/MechaCar_Statistical_Analysis")
library(dplyr)
setwd("C:/Users/kimbe/MechaCar_Statistical_Analysis")
library(dplyr)
Mecha_table <- read.csv('MechaCar_mpg.csv',check.names = F,stringsAsFactors = F)
View(Mecha_table)
lm(mpg ~ vehicle_length + vehicle_weight + spolier_angle + ground_clearance + AWD, data=Mecha_table)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=Mecha_table)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=Mecha_table))
library(ggplot2)
plt <- ggplot(Mecha_table, aes(x=vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, AWD))
sus_coil_table <- read.csv('Suspension_Coil.csv',check.names = F,stringsAsFactors = F)
View(sus_coil_table)
summary_df <- sus_coil_table %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Variance_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),Num_coil=n(), .groups='keep')
summary_df
total_summary <- sus_coil_table %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Variance_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),Num_coil=n(), .groups='keep')
total_summary
lot_summary <- sus_coil_table %>% group_by(Manufacturing_Lot %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI), Variance_PSI=var(PSI), Std_Dev_PSI=sd(PSI),Num_coil=n(), .groups='keep'))
lot_summary <- sus_coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI), Variance_PSI=var(PSI), Std_Dev_PSI=sd(PSI),Num_coil=n(), .groups='keep'))
lot_summary <- sus_coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI), Variance_PSI=var(PSI), Std_Dev_PSI=sd(PSI),Num_coil=n(), .groups='keep')
lot_summary
# Deliverable 3: T-Test on Suspension Coils - determine if the PSI across all manufacturing lots is statistically
# different from the population mean of 1,500 pounds per square inch.
t.test(sus_coil_table$PSI,mu=1500)
# determine if the PSI for each manufacturing lot is statistically different
# from the population mean of 1,500 pounds per square inch.
lot1 <- subset(sus_coil_table, Manufacturing_Lot == "Lot1")
lot2 <- subset(sus_coil_table, Manufacturing_Lot == "Lot2")
lot3 <- subset(sus_coil_table, Manufacturing_Lot == "Lot3")
t.test(lot1$PSI, mu=1500)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
